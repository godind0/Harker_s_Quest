// room script file
bool prewashedFace = false;
bool touchFireplace = false;
bool burnDocuments = false;
bool inBedroom = false;

bool intro_opening = true;

function oSink_Interact()
{
  player.Walk(oSink.X + 10, oSink.Y - 15, eBlock, eWalkableAreas);
  player.FaceObject(oSink);
  
  if(!prewashedFace && cHarkersBeard.Transparency < 100) // not washed,  not shaved
  {
    Display("Jonathan washes his face");
    player.Say("Damp skin makes for a better shave");
    player.Say("Wash before, wash after");
    prewashedFace = true;
  } else if(prewashedFace && cHarkersBeard.Transparency == 100)
  {
    Display("Jonathan washes his face");
    player.Say("Good, every little bit of shaving cream is removed!");
    giveScoreOnce("proper shave procedure", 1);
  } else
  {
    Display("Jonathan washes his hands");
    player.Say("Ah, how refreshing");
  }
}

bool highjackParseCommand(String cmd)
{
  bool sendBackToNormalParsing = true;
  
  if(findVerbInDictionary(cmd) == "take" && cmd.IndexOf("cigar") != -1)
  {
    sendBackToNormalParsing = false;
    if(player.HasInventory(iCigars))
    {
      player.Think("I already have some");
    } else {
      player.Think("These are handmade!");
      player.AddInventory(iCigars);
      giveScoreOnce(iCigars.Name, 1);
    }
  } else if(findVerbInDictionary(cmd) == "look" && cmd.IndexOf("cigar") != -1)
  {
    sendBackToNormalParsing = false;
    if(player.HasInventory(iCigars))
    {
      player.Think("My cigars");
      player.Think("But I already took some");
    } else {
      player.Think("These cigars are handmade!");
    }
  } else if (cmd.StartsWith("open") && cmd.IndexOf("drawer") != -1)
  {
    if(isCharacterNearObject(oSecretary, 30.0, player))
    {
      player.Think("There is a small drawer I can open");
      sendBackToNormalParsing = false;
      if(player.HasInventory(iPenInk))
      {
        player.Think("It is empty");
      } else
      {
        player.Think("There are writing instruments in there");
        player.Think("Those can be useful");
        player.AddInventory(iPenInk);
        giveScoreOnce(iPenInk.Name, 1);
      }
    } else {
      player.Think("What drawer?");
    }
  } else if(cmd.IndexOf("Touch") != -1 && (cmd.IndexOf("oven") != -1 || cmd.IndexOf("furnace") != -1 || cmd.IndexOf("fire") != -1))
  {
    if(touchFireplace == false)
    {
      player.Say("That sounds ill advised");
      touchFireplace = true;
    } else
    {
      player.Say("Alright then, let's touch it. . .");
      gameIsOver("Jonathan burned his hand to the 3rd degree");
    }
  } else if(cmd.StartsWith("Wash") || cmd.StartsWith("Clean"))
  {
    oSink_Interact();
    sendBackToNormalParsing = false;
  }
  
  return sendBackToNormalParsing;
}

bool highjackIndexElementVerb(int index, elementType eT, String verb)
{
  bool sendBackToNormalParsing = true;
  if(eT == roomObjects && index == 10 && verb == "open")//bedroom door
  {
    if(getStoryBeat() != packYourThings && !playerHasTimedEventByWhatHappens("Forced sleep"))
    {
      player.Think("I see no reason to go in my bedroom at the moment");
      sendBackToNormalParsing = false;
    } else {
      player.Think("I guess I can use some shut eye. . .");
      oBedroomDoor.Visible = false;
      RestoreWalkableArea(2);
      player.Walk(42, 164, eBlock, eWalkableAreas);
      inBedroom = true;
      show_wait_GUI("sleep");
      sendBackToNormalParsing = false;
    }
  } else if(eT == roomObjects && index == 21 && verb == "take")//travel trunk
  {
    if(getStoryBeat() != packYourThings)
    {
      player.Think("I see no reason to take this with me, right now");
      sendBackToNormalParsing = false;
    }
  } else if(eT == roomObjects && index == 20 && verb == "take")//mirror
  {  
    if(cHarkersBeard.Transparency < 100)
    {
      player.Think("I should shave before taking this");
      sendBackToNormalParsing = false;
    } else if (getStoryBeat() < packYourThings)
    {
      player.Think("I do not think I will need this today");
      sendBackToNormalParsing = false;
    }     
  } else if(eT == roomObjects && index == 11 && verb == "open")//front door
  {
    if(getStoryBeat() == startYourDay)
    {
      if(cHarkersBeard.Transparency < 100 && showHints)
      {
        player.Think("I cannot leave the apartment without shaving first");
        sendBackToNormalParsing = false;
      } else if (!player.HasInventory(iLegalPapers) && showHints)
      {
        player.Think("I worked on contracts all evening last night. I need to bring them in to work");
        sendBackToNormalParsing = false;
      }
    }
  } else if(eT == roomObjects && index == 2 && verb == "open")//secretary
  {
    player.Think("There is a small drawer I can open");
    sendBackToNormalParsing = false;
    if(player.HasInventory(iPenInk))
    {
      player.Think("It is empty");
    } else
    {
      player.Think("There are writing instruments in there");
      if (getStoryBeat() < packYourThings)
      {
        player.Think("But I do not think I will need those today");
      } else
      {
        player.Think("Those can be useful on the trip");
        player.AddInventory(iPenInk);
        giveScoreOnce(iPenInk.Name, 1);
      }
    }
  } 
  return sendBackToNormalParsing;
}

bool highjackFailedInteract(String cmd)
{
  bool sendBackToNormalParsing = true;
  //do nothing
  return sendBackToNormalParsing;
}

function highjackAfterInteract(int index, elementType eT, String verb)
{
  if(eT == roomObjects && index == 17 && verb == "look")//sink table
  {
    if(oRazor.Visible){
      player.Think("I see my trusted razor on that table");
    }
    if(oMirror.Visible){
      player.Think("My shaving glass is on that table");
    }
  } else if(eT == roomObjects && index == 0 && verb == "open")//armoire
  {
    if(!cHarker.HasInventory(iTrunk))
    {
      oTravelTrunk.Visible = true;
    }
  } else if(eT == roomObjects && index == 0 && verb == "look")//armoire
  {
    if(oTravelTrunk.Visible)
    {
      player.Think("I see my travel trunk in there");
    }
  } else if(eT == roomObjects && index == 0 && verb == "close")//armoire
  {
    if(oTravelTrunk.Visible == true)
    {
      oTravelTrunk.Visible = false;
    }
  } else if(eT == roomObjects && index == 2 && verb == "look")//secretary
  {
    if(oLegalPapers.Visible)
    {
      player.Think("I see the contracts I have been working on all evening on there");
    } else if(eT == roomObjects && index == 2 && verb == "look")//secretary
    {
      player.Think("There is a little drawer at the bottom");
      if(player.HasInventory(iPenInk)) {
        player.Think("But it is empty now");
      } else {
        player.Think("This is where I keep my writing instruments");
      }
    }
  } else if(eT == roomObjects && index == 22 && verb == "take")//legal papers
  {
    if(player.HasInventory(iLegalPapers))
    {
      addSubitem(iLegalPapers, "Signatures", "The signature page, to sign by the assigned sollicitor representative and by the client.", "I should sign it");
      addSubitem(iLegalPapers, "Articles", "The legal articles stipulated in the contract", "");
      addSubitem(iLegalPapers, "Title page", "Cover page with the client name, assigned sollicitor's name, type of contract, contract number, and date", "");
      oFolder.Visible = false;
      player.Think("Oh my");
      player.Think("These are all out of order");
      player.Think("I better organize them");
    }
  } else if(eT == roomObjects && index == 20 && verb == "look")//mirror
  {
    if(cHarkersBeard.Transparency < 100)
    {
      player.Say("I really should shave");
    } else {
      player.Say("I look tired. . . but at least those contracts are all done.");
    }
  } else if(eT == roomObjects && index == 21 && verb == "take")//trunk
  {
    if(player.HasInventory(iTrunk))
    {
      player.Say("Ah! It's still filled with my travel clothes from last time!");
    }
  } else if(eT == roomObjects && index == 25 && verb == "look")//cigar table
  {
    if(!player.HasInventory(iMatches)){
      player.Say("My box of matches are on it");
    }
  } else if (eT == roomObjects && index == 12 && verb == "look") // Mina's picture
  {
    if(isItBeforeThisTime(10, 30, 00, false, 1)) // before 11am
    {
      player.Say("I have a daily coffee rendez-vous with Mina at the Station CafÃ© at 11am");
      player.Say("I cannot wait!");
      addTravelDestination(StationCafe);
    }    
  } else if (eT == roomObjects && index == 19 && verb == "look") // Diploma
  {
    addTravelDestination(LawSocietyOffices);
  }
}

function on_call(int index)
{
  String indexElementVerbHandled[];
  String cmd;
  int elementIndex;
  elementType eT;
  String verb;
  bool handled = false;
  
  switch(index)
  {
    case 1://highjack or interact
      indexElementVerbHandled = new String[3];
      cmd = tbParser.Text;
      close_gui(gParser);
      
      if(highjackParseCommand(cmd)) 
      {
        indexElementVerbHandled = roomSpecificParse(cmd);
        elementIndex = indexElementVerbHandled[0].AsInt;
        eT = stringToET(indexElementVerbHandled[1]);
        verb = indexElementVerbHandled[2];
        
        if(highjackIndexElementVerb(elementIndex, eT, verb))
        {
          if(verb != "Skip")
          {
            if(verb != "Null") 
            {
              handled = interact(indexElementVerbHandled);
            }
          } else {
            handled = true;
          }
          
          if(handled) {
            highjackAfterInteract(elementIndex, eT, verb);
          } else {
            if(highjackFailedInteract(cmd))
            {
              player.Think("Hmmm. . . I do not quite get what the goal is, here");
            }
          }
        }
      }
      break;
  }
}

function room_FirstLoad()
{
  RemoveWalkableArea(2);
  RemoveWalkableArea(3);
  
  setOpeningAndClosingTimes();
  setupTravelDestinations();

  addTravelDestination(JonathanApt);
  addTravelDestination(HawkinsOffices);
  
  setStoryBeat(startYourDay);
  setCurrentZone(JonathanApt);
  
  Display("JONATHAN HARKERâS JOURNAL[(Kept in shorthand.)[23 april. Exeter");
  String diaryContent = "23 april. Exeter. Just got assigned my 100th property contract tonight. This means that I fulfilled the last requirement before taking my sollicitor exam. I will have to plan a trip to London soon to visit the Law Society and arrange for it. This is most thrilling. Once the exam is over, I will be one major sale away from secure finances. Then, Mina and I can finally marry. That wedding will be a grand expensive one that will be the talk of London. It is late already but I cannot sleep. Maybe I will light a candle and work tonight at my home desk until I am done.";
  createBook("Diary", diaryContent, " ",  " ");
  show_book_gui("Diary");
}

function room_AfterFadeIn()
{
}

function room_LeaveTop()
{
  dTravel.Start();
  //player.PlaceOnWalkableArea();
}

function oOven_UseInv()
{
  elementType useET = getETOfElementUsed();
  int useIndex = getIndexOfElementUsed();
  
  if(useET == allInventoryItems && useIndex == 6)
  {
    if(!player.HasInventory(iLegalPapers))
    {
      player.Think("What documents?");
    } else
    {
      if(!burnDocuments)
      {
        player.Think("But I worked all night on those");
      } else
      {
        player.Think("What is it all for anyways. . .");
        gameIsOver("Jonathan lost his job");
      }
    }
  }
}

function room_RepExec()
{
  if(intro_opening && !gBook.Visible)
  {
    FadeOut(5);
    gDark.Transparency = 100;
    FadeIn(5);
    triggerCutscene(beginQuest);
    intro_opening = false;
  }
  
  if(!oFrontDoor.Visible)
  {
    RestoreWalkableArea(3);
  } else {
    RemoveWalkableArea(3);
  }
  if(!oBedroomDoor.Visible)
  {
    RestoreWalkableArea(2);
  } else {
    RemoveWalkableArea(2);
  }
  if(inBedroom & !gWait.Visible)
  {
    player.Walk(64, 172, eBlock, eWalkableAreas);
    oBedroomDoor.Visible = true;
    RemoveWalkableArea(2);
    inBedroom = false;
  }
}

function room_Load()
{
  if(getGottaSleep())
  {
    player.x = 61;
    player.y = 172;
    hasSlept();
  }
}

function oMirror_UseInv()
{
  //do nothing
}
