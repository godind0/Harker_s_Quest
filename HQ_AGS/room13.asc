// room script file
bool gatheredDelieveries = false;

function receivePackages()
{
  Set* receivedPackages = getHotelPackages();
  String packageNames[];
  packageNames = receivedPackages.GetItemsAsArray();
  String carfaxSellerTelegram = "TelegramAnswer_";
  carfaxSellerTelegram = carfaxSellerTelegram.Append(carfaxSeller);
  int i;
  
  if(receivedPackages.ItemCount > 0)
  {
    Display("The reception of the hotel tells Jonathan they received something for him");
    for(i = 0 ; i < receivedPackages.ItemCount ; i++)
    {
      switch(packageNames[i])
      {
        case "ItineraryLetterFromDracula":
          Display("There is a package of letters sent by courrier by Hawkins, Esq.");
          addSubitem(iTelegrams, "Dracula's Letter", "This letter, signed by Count Dracula, describes the suggested itinerary from London to Transylvania", "Suggested route: London, Southamptons, Paris, Munich, Vienna, Budapest, Klausenburg, Bistritz");
          addSubitem(iTelegrams, "Munich's contracts", "Mr. Hawkins planned to stop a few days in Munich and negotiate some dealings with different Londonian firms", "Stops: Old Pinakothek Museum, Munich Opera House, Municipal Dead House");
          giveScoreOnce("ItineraryLetterFromDracula", 1);
          break;
        case "TelegramAnswer_Mina":
          Display("There is a telegram from a W. Murray");
          addSubitem(iTelegrams, "Mina's Telegram", "Cannot wait to see you again STOP[Love", "");
          break;
        case "TelegramAnswer_Hawkins":
          Display("There is a telegram from a P. Hawkins");
          addSubitem(iTelegrams, "Mr. Hawkins's Telegram", "Great thinking Harker STOP[Happy travels", "");
          break;
        case carfaxSellerTelegram:
          Display(String.Format("There is a telegram from a E. %s", carfaxSeller));
          addSubitem(iTelegrams, String.Format("%s's Telegram",  carfaxSeller), "Property for sale STOP[Details of contract under my name at Law Society's reception", "");
          break;
        default:
          debugDisplay(String.Format("%s is not a recognized package name for function receivePackages in room13", packageNames[i]));
          break;
      }
    }
  }
  gatheredDelieveries = true;
}

function room_AfterFadeIn()
{
  musicInRoom(aDeambulation);
  receivePackages();
  Wait(40);
  show_wait_GUI("sleep");
}

function room_RepExec()
{
  if(!gWait.Visible && gatheredDelieveries) {
    whatTimeIsIt(true);
    Display("After spending a little time at the hotel, Jonathan decides to go back to the nearby train station");
    travel(LondonTrainStation);
  }
}